/*
 *  Methodologies for this Project
 *
 *
 *  ITCSS
 *  https://www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/
 *
 *  Stands for Inverted Triangle CSS and it helps you to organize your
 *  project CSS files in such way that you can better deal with
 *  (not always easy-to-deal with) CSS specifics like global
 *  namespace, cascade and selectors specificity.
 *
 *
 *  BEM
 *  http://getbem.com/introduction/
 *
 *  Stands for Block Element Modifier and helps to avoid inheritance,
 *  provides some sort of scope by using unique CSS classes per
 *  element (like .Button__icon--active), and reduces style
 *  conflicts by keeping CSS specificity to a minimum level.
 */

/*
 *  Variables, Fonts, Colors, Definitions, Branding
 */

/*
 *  Variables used for mixins
 */

/*
 *  Base Colors
 */

/*
 *  Background Colors
 */

/*
 *  Base Animation Variables
 */

/*
 * Slide Left
 *
 * ...
 */

.slide-left-enter-active,
.slide-left-leave-active {
  -webkit-transition: opacity 300ms cubic-bezier(1, 0.5, 0.8, 1), -webkit-transform 300ms cubic-bezier(1, 0.5, 0.8, 1);
  transition: opacity 300ms cubic-bezier(1, 0.5, 0.8, 1), -webkit-transform 300ms cubic-bezier(1, 0.5, 0.8, 1);
  transition: transform 300ms cubic-bezier(1, 0.5, 0.8, 1), opacity 300ms cubic-bezier(1, 0.5, 0.8, 1);
  transition: transform 300ms cubic-bezier(1, 0.5, 0.8, 1), opacity 300ms cubic-bezier(1, 0.5, 0.8, 1), -webkit-transform 300ms cubic-bezier(1, 0.5, 0.8, 1);
}

.slide-left-enter {
  opacity: 0;
  -webkit-transform: translateX(100px);
          transform: translateX(100px);
}

.slide-left-enter-to,
.slide-left-leave {
  -webkit-transform: translateX(0);
          transform: translateX(0);
  opacity: 1;
}

.slide-left-leave-to {
  -webkit-transform: translateX(-100px);
          transform: translateX(-100px);
  opacity: 0;
}

/*
 * Slide Right
 *
 * ...
 */

.slide-right-enter-active,
.slide-right-leave-active {
  -webkit-transition: opacity 300ms cubic-bezier(1, 0.5, 0.8, 1), -webkit-transform 300ms cubic-bezier(1, 0.5, 0.8, 1);
  transition: opacity 300ms cubic-bezier(1, 0.5, 0.8, 1), -webkit-transform 300ms cubic-bezier(1, 0.5, 0.8, 1);
  transition: transform 300ms cubic-bezier(1, 0.5, 0.8, 1), opacity 300ms cubic-bezier(1, 0.5, 0.8, 1);
  transition: transform 300ms cubic-bezier(1, 0.5, 0.8, 1), opacity 300ms cubic-bezier(1, 0.5, 0.8, 1), -webkit-transform 300ms cubic-bezier(1, 0.5, 0.8, 1);
}

.slide-right-enter {
  opacity: 0;
  -webkit-transform: translateX(-100px);
          transform: translateX(-100px);
}

.slide-right-enter-to,
.slide-right-leave {
  -webkit-transform: translateX(0);
          transform: translateX(0);
  opacity: 1;
}

.slide-right-leave-to {
  -webkit-transform: translateX(100px);
          transform: translateX(100px);
  opacity: 0;
}

.slide-left-enter-active,
.slide-left-leave-active,
.slide-right-enter-active,
.slide-right-leave-active {
  position: absolute;
  top: 0;
}

/*
 *  NProgress Bar Colors
 */

/*
 *  User Select / Text Highlight
 */

/*
 *  Colors for other variables
 */

/*
 *  Styling for HTML and Body elements
 */

/*
 *  Global mixins and functions.
 */

/* Gradient: Top to Bottom */

.wrap {
  *zoom: 1;
}

.wrap:before,
.wrap:after {
  content: ' ';
  display: table;
}

.wrap:after {
  clear: both;
}

/*
 *  Reset Stylesheets, first layer of CSS.
 */

* {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  outline: none;
}

img {
  border: 0;
  -ms-interpolation-mode: bicubic;
  vertical-align: middle;
  max-width: 100%;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

small {
  font-size: 80%;
}

ins {
  background: #ff0;
  color: #000;
  text-decoration: none;
}

mark {
  background: #ff0;
  color: #000;
}

del {
  text-decoration: line-through;
}

b,
strong {
  font-weight: bold;
}

em,
dfn {
  font-style: italic;
}

abbr[title],
dfn[title] {
  border-bottom: 1px dotted;
  cursor: help;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

hr {
  height: 0;
  box-sizing: content-box;
  -webkit-box-sizing: content-box;
  -moz-box-sizing: content-box;
}

legend {
  white-space: normal;
  margin-left: -7px;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption,
th,
td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

pre,
code,
kbd,
samp {
  font-family: monospace, serif;
  _font-family: 'courier new', monospace;
  font-size: 1em;
}

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

/* Improve readability of pre-formatted text in all browsers */

svg:not(:root) {
  overflow: visible;
}

/* Correct overflow not hidden in IE9 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* HTML5 Definitions */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
  display: inline;
  zoom: 1;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden] {
  display: none;
}

/* Reset Form Styles */

button[disabled],
input[disabled] {
  cursor: default;
}

button,
input {
  line-height: normal;
}

/* Define line-height as normal to match FF3/4 */

select,
input,
textarea,
button {
  font-size: 100%;
  vertical-align: baseline;
  vertical-align: middle;
  text-transform: none;
}

/* Font Normalization */

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical;
}

button {
  width: auto;
  overflow: visible;
  border: #fff solid 0px;
}

/* Make buttons play nice in IE */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/* Remove inner padding and border in FF3/4 */

/* Consistent box sizing and appearance */

input[type="checkbox"],
input[type="radio"] {
  padding: 0;
  width: 13px;
  height: 13px;
}

input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/* Remove inner padding and border in FF3/4: h5bp.com/l */

/* Align checkboxes, radios, text inputs with their label */

input[type="checkbox"],
input[type="radio"] {
  height: 13px;
  width: 13px;
  vertical-align: middle;
}

/* Hand cursor on clickable input elements */

label,
input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="image"],
button {
  cursor: pointer;
  -webkit-appearance: none;
  overflow: visible;
}

/* Colors for form validity */

input:invalid,
textarea:invalid {
  background-color: #f0dddd;
}

/* Highlight Styles */

::-moz-selection {
  background: #000;
  color: #fff;
  text-shadow: none;
}

::selection {
  background: #000;
  color: #fff;
  text-shadow: none;
}

.m2-header {
  position: relative;
  height: 800px;
  width: 100%;
  background-image: url("/images/module2/temp.jpg");
}

.m2-header:before {
  content: ' ';
  position: absolute;
  background: -webkit-gradient(linear, left top, left bottom, from(transparent), to(white));
  background: linear-gradient(transparent, white);
  height: 800px;
  width: 100%;
}

.slide {
  border: 5px solid black;
  margin: 50px;
}

.slide-header {
  font-size: 30pt;
  font-weight: 400;
}

.citation-source {
  color: #A59D95;
  font-size: 16px;
}

/*
 *  Styling of Bare elements like H1, p, a, etc.
 */

/* Base Styles */

html {
  font-size: 62.5%;
  min-height: 100%;
  background-color: none;
  overflow-y: scroll;
}

body {
  min-height: 100%;
  line-height: 1;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-font-smoothing: subpixel-antialiased;
  background-color: none;
}

body,
button,
input,
select,
textarea {
  color: #444;
  font-style: normal;
  font-family: "Source Sans Pro", "Open Sans", Helvetica, Arial, Verdana, sans-serif;
  font-size: 16px;
  font-size: 1.6rem;
}

h1 {
  font-size: 30px;
  font-size: 3rem;
  line-height: 140%;
}

h2 {
  font-size: 22px;
  font-size: 2.2rem;
  font-weight: 300;
  margin-bottom: 20px;
}

h3 {
  font-size: 20px;
  font-size: 2rem;
  font-weight: 300;
  margin-bottom: 8px;
}

p {
  line-height: 130%;
  padding: 3px 0 2px;
  margin-bottom: 10px;
}

hr {
  border: none;
  border-top: #fff solid 1px;
  margin: 30px 0;
}

/*
 *  Class-based selectors which define undecorated
 *  design patterns, for example media object
 *  known from OOCSS.
 */

/*
 *  Specific UI components. This is where majority
 *  of our work takes place and our UI components
 *  are often composed of Objects and Components.
 */

.Container {
  margin: 20px !important;
  padding: 40px 20px 20px !important;
  border: #ccc solid 1px;
  max-width: 100%;
  position: relative !important;
  -webkit-box-shadow: 2px 4px 12px rgba(0, 0, 0, 0);
          box-shadow: 2px 4px 12px rgba(0, 0, 0, 0);
}

.Container > code {
  position: absolute;
  top: 0;
  left: 0;
  font-size: 12px;
  font-size: 1.2rem;
  background: #f1f1f1;
  border: #ccc solid 1px;
  border-top: none;
  border-left: none;
  padding: 6px 8px 4px;
  margin: 0 0 20px;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  -ms-flex-negative: 1;
      flex-shrink: 1;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

body.Container {
  margin: 0 !important;
  border: none !important;
}

.PeopleIndex__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.Person__con {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.Person__navigate {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.Person__navigate button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  height: 34px;
  background: rgba(57, 204, 204, 0.25);
  border: #2ba7a7 solid 1px;
  color: #010505;
  padding: 0 12px;
}

.Person__navigate button i {
  margin: 0 8px;
}

.Person__navigate button:first-child {
  padding-left: 2px;
}

.Person__navigate button:last-child {
  padding-right: 2px;
}

.Person__navigate button:hover {
  background: #39CCCC;
}

.Person__navigate button:disabled {
  background: #eee;
  color: #ccc;
  border-color: #ccc;
  cursor: default;
}

.PersonSidebar {
  width: 50%;
  max-width: 280px;
}

.PersonSidebar__con {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.PersonSidebar__details {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.PersonSidebar nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  margin: 10px 0 0;
}

.PersonSidebar nav a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-top: #ccc solid 1px;
  text-decoration: none;
  color: #85144b;
  padding: 8px 4px 6px;
}

.PersonSidebar nav a:first-child {
  border-top: none;
}

.PersonSidebar nav a:hover {
  background: rgba(133, 20, 75, 0.05);
}

.PersonSidebar nav a.active {
  background: #85144b;
  color: #fff;
}

.PersonView {
  width: 100%;
}

.PersonView__con {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.PersonViewContact__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.Navigation__con {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  width: 100%;
}

.Navigation__con a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: 0 20px;
  background: rgba(133, 20, 75, 0.08);
  margin-left: 8px;
  height: 48px;
  border: rgba(95, 58, 76, 0.5) solid 1px;
  text-decoration: none;
  color: #85144b;
}

.Navigation__con a:first-child {
  margin-left: 0;
}

.Navigation__con a:hover {
  background: #fff;
}

.Navigation__con a.active {
  background: #85144b;
  color: #fff;
}

.SubNavigation {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  width: 100%;
}

.SubNavigation a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: 0 20px;
  background: rgba(133, 20, 75, 0.05);
  margin-left: 8px;
  height: 32px;
  border: rgba(118, 35, 75, 0.3) solid 1px;
  text-decoration: none;
  color: #2c0719;
}

.SubNavigation a:first-child {
  margin-left: 0;
}

.SubNavigation a:hover {
  background: #fff;
}

.SubNavigation a.active {
  background: #2c0719;
  color: #fff;
}

.Core__con {
  width: 100%;
}

.CoreNavigation__actions {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.CoreNavigation__actions button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border: #ccc solid 1px;
  height: 32px;
  border-left: none;
  color: #444;
  outline: none;
}

.CoreNavigation__actions button i {
  margin: 0 5px;
}

.CoreNavigation__actions button i:first-child {
  margin-left: 0;
}

.CoreNavigation__actions button i:last-child {
  margin-right: 0;
}

.CoreNavigation__actions button:first-child {
  border-left: #ccc solid 1px;
}

.CoreNavigation__actions button:hover {
  background: #eee;
  color: #85144b;
}

.CoreBody__con {
  position: relative;
}

#nprogress {
  pointer-events: none;
  /* Fancy blur effect */
  /* Remove these to get rid of the spinner */
}

#nprogress .bar {
  background: #85144b;
  position: fixed;
  z-index: 1031;
  top: 0;
  left: 0;
  width: 100%;
  height: 6px;
}

#nprogress .peg {
  display: block;
  position: absolute;
  right: 0px;
  width: 100px;
  height: 100%;
  -webkit-box-shadow: 0 0 10px #85144b, 0 0 5px #85144b;
          box-shadow: 0 0 10px #85144b, 0 0 5px #85144b;
  opacity: 1.0;
  -webkit-transform: rotate(3deg) translate(0px, -4px);
          transform: rotate(3deg) translate(0px, -4px);
}

#nprogress .spinner {
  display: block;
  position: fixed;
  z-index: 1031;
  top: 15px;
  right: 15px;
}

#nprogress .spinner-icon {
  width: 18px;
  height: 18px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border: solid 2px transparent;
  border-top-color: #85144b;
  border-left-color: #85144b;
  border-radius: 50%;
  -webkit-animation: nprogress-spinner 400ms linear infinite;
          animation: nprogress-spinner 400ms linear infinite;
}

.nprogress-custom-parent {
  overflow: hidden;
  position: relative;
}

.nprogress-custom-parent #nprogress .spinner,
.nprogress-custom-parent #nprogress .bar {
  position: absolute;
}

@-webkit-keyframes nprogress-spinner {
  0% {
    -webkit-transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
  }
}

@keyframes nprogress-spinner {
  0% {
    -webkit-transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
  }
}

.ProfilePhoto {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 64px;
  height: 64px;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  border-radius: 64px;
  background-clip: padding-box;
  /* stops bg color from leaking outside the border: */
  overflow: hidden;
  background: #eee;
}

.ProfilePhoto img {
  width: 100%;
  max-width: 100%;
}

.ProfilePhoto--large {
  width: 128px;
  height: 128px;
}

.ProfilePhoto--small {
  width: 32px;
  height: 32px;
}

.ListItem {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  text-decoration: none;
  color: #444;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  cursor: pointer;
  padding: 14px 10px 12px;
}

.ListItem__con {
  margin-left: 16px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.ListItem__con:first-child {
  margin-left: 0;
}

.ListItem__title {
  font-size: 16px;
  font-size: 1.6rem;
  font-weight: 600;
  text-transform: capitalize;
}

.ListItem__subtitle {
  font-size: 12px;
  font-size: 1.2rem;
  color: #999;
  margin-top: 3px;
}

.ListItem:hover {
  background: #eee;
  color: #85144b;
}

/*
 *  Helper classes with ability to override
 *  anything which goes before in the
 *  triangle, eg. hide helper class.
 */

.wrap {
  max-width: 1200px;
  margin: 0 auto;
}

.al {
  text-align: left;
}

.ac {
  text-align: center;
}

.ar {
  text-align: right;
}

.fl {
  float: left;
}

.fr {
  float: right;
}

.hidden {
  display: none !important;
  visibility: hidden;
}

/* Hide from both screenreaders and browsers */

.invisible {
  visibility: hidden;
}

/* Hide visually and from screenreaders, but maintain layout */

.noscroll {
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/